getwd()
activityData <- read.csv("activity.csv", header = TRUE)
View(activityData)
activityData <- transform(activityData, timestamp=as.POSIXct(paste(Date, Time)), "%d/%m/%Y %H:%M:%S")
activityData <- read.csv("activity.csv", header = TRUE)
activityData <- transform(activityData, timestamp=as.POSIXct(paste(date, interval)), "%d/%m/%Y %H:%M:%S")
View(activityData)
View(activityData)
activityData <- na.omit(activityData)
View(activityData)
getwd()
activityData <- read.csv("activity.csv", header = TRUE)
activityData <- na.omit(activityData)
View(activityData)
dt <- data.table(activityData)
library(data.table)
dt <- data.table(activityData)
## What is mean total number of steps taken per day?
library(data.table)
install.packages("data.table")
library(data.table)
dt <- data.table(activityData)
View(dt)
df <- as.data.frane(dt[,list(total = sum(steps)), by =c("date")])
df <- as.data.frane(dt[,list(total = sum(steps)), by =c("date")])
df <- as.data.frame(dt[,list(total = sum(steps)), by =c("date")])
hist(df$total, col=3, main="Histogram of the total number of steps per day",
xlab="Total number of steps per day", border = 3)
mean <- mean(df$total)
median <- median(df$total)
interval_steps <- aggregate(steps ~ interval, activityData, mean)
interval_steps <- aggregate(steps ~ interval, activityData, mean)
mean1 <- mean(df$total)
median1 <- median(df$total)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
getwd()
activityData <- read.csv("activity.csv", header = TRUE)
#Omit NAs
activityData <- na.omit(activityData)
## What is mean total number of steps taken per day?
library(data.table)
dt <- data.table(activityData)
df <- as.data.frame(dt[,list(total = sum(steps)), by =c("date")])
hist(df$total, col=3, main="Histogram of the total number of steps per day",
xlab="Total number of steps per day", border = 3)
## What is the average daily activity pattern?
mean1 <- mean(df$total)
median1 <- median(df$total)
interval_steps <- aggregate(steps ~ interval, activityData, mean)
interval_steps <- aggregate(steps ~ interval, activityData, mean)
plot(interval_steps$interval, interval_steps$steps, type='l', col=1,
main="Average number of steps averaged across all days", xlab="Interval",
ylab="Average number of steps")
interval_steps1 <- aggregate(steps ~ interval, activityData, mean)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
getwd()
activityData <- read.csv("activity.csv", header = TRUE)
#Omit NAs
activityData <- na.omit(activityData)
## What is mean total number of steps taken per day?
library(data.table)
dt <- data.table(activityData)
df <- as.data.frame(dt[,list(total = sum(steps)), by =c("date")])
hist(df$total, col=3, main="Histogram of the total number of steps per day",
xlab="Total number of steps per day", border = 3)
## What is the average daily activity pattern?
mean1 <- mean(df$total)
median1 <- median(df$total)
interval_steps1 <- aggregate(steps ~ interval, activityData, mean)
interval_steps1 <- aggregate(steps ~ interval, activityData, mean)
View(dt)
## Loading and preprocessing the data
getwd()
activityData <- read.csv("activity.csv", header = TRUE)
#Omit NAs
activityData <- na.omit(activityData)
## What is mean total number of steps taken per day?
library(data.table)
dt <- data.table(activityData)
df <- as.data.frame(dt[,list(total = sum(steps)), by =c("date")])
hist(df$total, col=3, main="Histogram of the total number of steps per day",
xlab="Total number of steps per day", border = 3)
## What is the average daily activity pattern?
mean1 <- mean(df$total)
median1 <- median(df$total)
interval_steps1 <- aggregate(steps ~ interval, activityData, mean)
plot(interval_steps1$interval, interval_steps1$steps, type='l', col=1,
main="Average number of steps averaged across all days", xlab="Interval",
ylab="Average number of steps")
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
max_row_id <- which.max(interval_steps$steps)
max_row_id <- which.max(interval_steps1$steps)
interval_steps1 [max_row_id, ]
data_NA <- data[!complete.cases(data),]
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
getwd()
activityData <- read.csv("activity.csv", header = TRUE)
#Omit NAs
clean_activityData <- na.omit(activityData)
## What is mean total number of steps taken per day?
library(data.table)
dt <- data.table(clean_activityData)
df <- as.data.frame(dt[,list(total = sum(steps)), by =c("date")])
hist(df$total, col=3, main="Histogram of the total number of steps per day",
xlab="Total number of steps per day", border = 3)
## What is the average daily activity pattern?
mean1 <- mean(df$total)
median1 <- median(df$total)
interval_steps1 <- aggregate(steps ~ interval, clean_activityData, mean)
plot(interval_steps1$interval, interval_steps1$steps, type='l', col=1,
main="Average number of steps averaged across all days", xlab="Interval",
ylab="Average number of steps")
max_row_id <- which.max(interval_steps1$steps)
interval_steps1 [max_row_id, ]
## Imputing missing values
data_NA <- data[!complete.cases(activityData),]
Total_rows <- nrow(data_NA)
## Are there differences in activity patterns between weekdays and weekends?
data_NA <- activityData[!complete.cases(activityData),]
Total_rows <- nrow(data_NA)
##
for (i in 1:nrow(df)){
if (is.na(activityData$steps[i])){
interval_val <- activityData$interval[i]
row_id <- which(interval_steps$interval == interval_val)
steps_val <- interval_steps$steps[row_id]
activityData$steps[i] <- steps_val
}
}
## 4
##
for (i in 1:nrow(df)){
if (is.na(activityData$steps[i])){
interval_val <- activityData$interval[i]
row_id <- which(interval_steps$interval == interval_val)
steps_val <- interval_steps1$steps[row_id]
activityData$steps[i] <- steps_val
}
}
##
for (i in 1:nrow(df)){
if (is.na(activityData$steps[i])){
interval_val <- activityData$interval[i]
row_id <- which(interval_steps1$interval == interval_val)
steps_val <- interval_steps1$steps[row_id]
activityData$steps[i] <- steps_val
}
}
## 4
# aggregate steps as per date to get total number of steps in a day
inserted <- aggregate(steps ~ date, activityData, sum)
# create histogram of total number of steps in a day
hist(inserted$steps, col=3, border = 3, main="(Imputed) Histogram of total number of steps per day", xlab="Total number of steps in a day")
mean2 <- mean(inserted$steps)
median2 <- median(inserted$steps)
day <- weekdays(as.Date(activityData$date))
daylevel <- vector()
for (i in 1:nrow(activityData)) {
if (day[i] == "Saturday") {
daylevel[i] <- "Weekend"
} else if (day[i] == "Sunday") {
daylevel[i] <- "Weekend"
} else {
daylevel[i] <- "Weekday"
}
}
activityData$daylevel <- daylevel
activityData$daylevel <- factor(activityData$daylevel)
stepsByDay <- aggregate(steps ~ interval + daylevel, activityData = activityData, mean)
names(stepsByDay) <- c("interval", "daylevel", "steps")
hist(inserted$steps, col=3, border = 3, main="(Imputed) Histogram of total number of steps per day", xlab="Total number of steps in a day")
mean2 <- mean(inserted$steps)
median2 <- median(inserted$steps)
## Are there differences in activity patterns between weekdays and weekends?
# Create a new factor variable in the dataset with two levels – “weekday” and “weekend” indicating whether a given date is a weekday or weekend day
day <- weekdays(as.Date(activityData$date))
daylevel <- vector()
for (i in 1:nrow(activityData)) {
if (day[i] == "Saturday") {
daylevel[i] <- "Weekend"
} else if (day[i] == "Sunday") {
daylevel[i] <- "Weekend"
} else {
daylevel[i] <- "Weekday"
}
}
activityData$daylevel <- daylevel
activityData$daylevel <- factor(activityData$daylevel)
stepsByDay <- aggregate(steps ~ interval + daylevel, activityData = activityData, mean)
library(lattice)
# create the panel plot
xyplot(steps ~ interval | daylevel, stepsByDay, type = "l", layout = c(1, 2),
xlab = "Interval", ylab = "Number of steps")
---
title: "Reproducible Research: Peer Assessment 1"
html_document:
output:
---
## Loading and preprocessing the data
activityData <- read.csv(unz("activity.zip", "activity.csv"))
clean_activityData <- na.omit(activityData)
## What is mean total number of steps taken per day?
df <- as.data.frame(dt[,list(total = sum(steps)), by =c("date")])
xlab="Total number of steps per day", border = 3)
## What is the average daily activity pattern?
mean1 <- mean(df$total)
median1 <- median(df$total)
interval_steps1 <- aggregate(steps ~ interval, clean_activityData, mean)
plot(interval_steps1$interval, interval_steps1$steps, type='l', col=1,
main="Average number of steps averaged across all days", xlab="Interval",
ylab="Average number of steps")
max_row_id <- which.max(interval_steps1$steps)
interval_steps1 [max_row_id, ]
## Inputing missing values
data_NA <- activityData[!complete.cases(activityData),]
hist(df$total, col=3, main="Histogram of the total number of steps per day",
##
for (i in 1:nrow(df)){
if (is.na(activityData$steps[i])){
interval_val <- activityData$interval[i]
row_id <- which(interval_steps1$interval == interval_val)
steps_val <- interval_steps1$steps[row_id]
}
}
Total_rows <- nrow(data_NA)
activityData$steps[i] <- steps_val
#Ignore NAs
keep_md: true
dt <- data.table(clean_activityData)
getwd()
library(data.table)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
getwd()
activityData <- read.csv(unz("activity.zip", "activity.csv"))
#Ignore NAs
clean_activityData <- na.omit(activityData)
## What is mean total number of steps taken per day?
library(data.table)
dt <- data.table(clean_activityData)
df <- as.data.frame(dt[,list(total = sum(steps)), by =c("date")])
hist(df$total, col=3, main="Histogram of the total number of steps per day",
xlab="Total number of steps per day", border = 3)
## What is the average daily activity pattern?
mean1 <- mean(df$total)
median1 <- median(df$total)
interval_steps1 <- aggregate(steps ~ interval, clean_activityData, mean)
plot(interval_steps1$interval, interval_steps1$steps, type='l', col=1,
main="Average number of steps averaged across all days", xlab="Interval",
ylab="Average number of steps")
max_row_id <- which.max(interval_steps1$steps)
interval_steps1 [max_row_id, ]
## Inputing missing values
Total_rows <- nrow(data_NA)
for (i in 1:nrow(df)){
if (is.na(activityData$steps[i])){
row_id <- which(interval_steps1$interval == interval_val)
steps_val <- interval_steps1$steps[row_id]
interval_val <- activityData$interval[i]
##
data_NA <- activityData[!complete.cases(activityData),]
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
getwd()
activityData <- read.csv(unz("activity.zip", "activity.csv"))
#Ignore NAs
clean_activityData <- na.omit(activityData)
## What is mean total number of steps taken per day?
library(data.table)
dt <- data.table(clean_activityData)
df <- as.data.frame(dt[,list(total = sum(steps)), by =c("date")])
hist(df$total, col=3, main="Histogram of the total number of steps per day",
hist(df$total, col=3, main="Histogram of the total number of steps per day",
---
title: 'Reproducible Research: Peer Assessment 1'
output:
pdf_document: default
html_document:
keep_md: yes
---
## Loading and preprocessing the data
getwd()
activityData <- read.csv(unz("activity.zip", "activity.csv"))
#Ignore NAs
clean_activityData <- na.omit(activityData)
## What is mean total number of steps taken per day?
library(data.table)
dt <- data.table(clean_activityData)
df <- as.data.frame(dt[,list(total = sum(steps)), by =c("date")])
hist(df$total, col=3, main="Histogram of the total number of steps per day",
xlab="Total number of steps per day", border = 3)
## What is the average daily activity pattern?
mean1 <- mean(df$total)
median1 <- median(df$total)
interval_steps1 <- aggregate(steps ~ interval, clean_activityData, mean)
plot(interval_steps1$interval, interval_steps1$steps, type='l', col=1,
main="Average number of steps averaged across all days", xlab="Interval",
ylab="Average number of steps")
max_row_id <- which.max(interval_steps1$steps)
interval_steps1 [max_row_id, ]
## Inputing missing values
data_NA <- activityData[!complete.cases(activityData),]
Total_rows <- nrow(data_NA)
##
for (i in 1:nrow(df)){
if (is.na(activityData$steps[i])){
interval_val <- activityData$interval[i]
row_id <- which(interval_steps1$interval == interval_val)
steps_val <- interval_steps1$steps[row_id]
activityData$steps[i] <- steps_val
}
}
## 4
# aggregate steps as per date to get total number of steps in a day
inserted <- aggregate(steps ~ date, activityData, sum)
# create histogram of total number of steps in a day
hist(inserted$steps, col=3, border = 3, main="(Imputed) Histogram of total number of steps per day", xlab="Total number of steps in a day")
mean2 <- mean(inserted$steps)
median2 <- median(inserted$steps)
## Are there differences in activity patterns between weekdays and weekends?
# Create a new factor variable in the dataset with two levels – “weekday” and “weekend” indicating whether a given date is a weekday or weekend day
day <- weekdays(as.Date(activityData$date))
daylevel <- vector()
for (i in 1:nrow(activityData)) {
if (day[i] == "Saturday") {
daylevel[i] <- "Weekend"
} else if (day[i] == "Sunday") {
daylevel[i] <- "Weekend"
} else {
daylevel[i] <- "Weekday"
}
}
activityData$daylevel <- daylevel
activityData$daylevel <- factor(activityData$daylevel)
stepsByDay <- aggregate(steps ~ interval + daylevel, activityData = activityData, mean)
View(dt)
activityData$daylevel <- daylevel
activityData$daylevel <- factor(activityData$daylevel)
stepsByDay <- aggregate(steps ~ interval + daylevel, activityData = activityData, mean)
stepsByDay <- aggregate(steps ~ interval + daylevel, activityData = activityData, mean)
names(stepsByDay) <- c("interval", "daylevel", "steps")
# make the panel plot for weekdays and weekends
library(lattice)
# create the panel plot
xyplot(steps ~ interval | daylevel, stepsByDay, type = "l", layout = c(1, 2),
xlab = "Interval", ylab = "Number of steps")
day <- weekdays(as.Date(activityData$date))
daylevel <- vector()
for (i in 1:nrow(activityData)) {
if (day[i] == "Saturday") {
daylevel[i] <- "Weekend"
} else if (day[i] == "Sunday") {
daylevel[i] <- "Weekend"
} else {
daylevel[i] <- "Weekday"
}
}
activityData$daylevel <- daylevel
activityData$daylevel <- factor(activityData$daylevel)
stepsByDay <- aggregate(steps ~ interval + daylevel, data = data, mean)
activityData <- read.csv(unz("activity.zip", "activity.csv"))
#Ignore NAs
clean_activityData <- na.omit(activityData)
## What is mean total number of steps taken per day?
library(data.table)
dt <- data.table(clean_activityData)
df <- as.data.frame(dt[,list(total = sum(steps)), by =c("date")])
library(data.table)
dt <- data.table(clean_activityData)
df <- as.data.frame(dt[,list(total = sum(steps)), by =c("date")])
hist(df$total, col=3, main="Histogram of the total number of steps per day",
xlab="Total number of steps per day", border = 3)
## What is the average daily activity pattern?
mean1 <- mean(df$total)
median1 <- median(df$total)
interval_steps1 <- aggregate(steps ~ interval, clean_activityData, mean)
plot(interval_steps1$interval, interval_steps1$steps, type='l', col=1,
main="Average number of steps averaged across all days", xlab="Interval",
ylab="Average number of steps")
max_row_id <- which.max(interval_steps1$steps)
interval_steps1 [max_row_id, ]
## Inputing missing values
data_NA <- activityData[!complete.cases(activityData),]
Total_rows <- nrow(data_NA)
##
for (i in 1:nrow(df)){
if (is.na(activityData$steps[i])){
interval_val <- activityData$interval[i]
row_id <- which(interval_steps1$interval == interval_val)
steps_val <- interval_steps1$steps[row_id]
activityData$steps[i] <- steps_val
}
}
## 4
# aggregate steps as per date to get total number of steps in a day
inserted <- aggregate(steps ~ date, activityData, sum)
# create histogram of total number of steps in a day
hist(inserted$steps, col=3, border = 3, main="(Imputed) Histogram of total number of steps per day", xlab="Total number of steps in a day")
mean2 <- mean(inserted$steps)
median2 <- median(inserted$steps)
## Are there differences in activity patterns between weekdays and weekends?
# Create a new factor variable in the dataset with two levels – “weekday” and “weekend” indicating whether a given date is a weekday or weekend day
day <- weekdays(as.Date(activityData$date))
daylevel <- vector()
for (i in 1:nrow(activityData)) {
if (day[i] == "Saturday") {
daylevel[i] <- "Weekend"
} else if (day[i] == "Sunday") {
daylevel[i] <- "Weekend"
} else {
daylevel[i] <- "Weekday"
}
}
activityData$daylevel <- daylevel
activityData$daylevel <- factor(activityData$daylevel)
stepsByDay <- aggregate(steps ~ interval + daylevel, data = activityData, mean)
names(stepsByDay) <- c("interval", "daylevel", "steps")
# make the panel plot for weekdays and weekends
library(lattice)
# create the panel plot
xyplot(steps ~ interval | daylevel, stepsByDay, type = "l", layout = c(1, 2),
xlab = "Interval", ylab = "Number of steps")
getwd()
title: 'Reproducible Research: Peer Assessment 1'
output: Single R markdown document
pdf_document: 'default'
---
## Loading and preprocessing the data
# unzip and read the activity data file
